/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package GUI;

import MyDesign.ScrollBar;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Window;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Random;

import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

import org.apache.poi.poifs.property.Parent;
import org.apache.poi.util.SystemOutLogger;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import com.aspose.pdf.internal.imaging.internal.bouncycastle.crypto.tls.NewSessionTicket;

import BUS.author_BUS;
import BUS.category_BUS;
import BUS.cpBook_BUS;
import BUS.detailSC_BUS;
import BUS.publisher_BUS;
import BUS.supplyCard_BUS;
import DTO.Author;
import DTO.Category;
import DTO.kho_DTO;
import DTO.publisher;
import DTO.supply_Card;

/**
 *
 * @author QUANG DIEN
 */
public class WareHouseImport_Dialog extends javax.swing.JDialog {

    /**
     * Creates new form WareHouseImport_Dialog
     */
    public WareHouseImport_Dialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        spTable.setVerticalScrollBar(new ScrollBar());
        spTable.getVerticalScrollBar().setBackground(Color.WHITE);
        spTable.getViewport().setBackground(Color.WHITE);
        JPanel p = new JPanel();
        p.setBackground(Color.WHITE);
        spTable.setCorner(JScrollPane.UPPER_RIGHT_CORNER, p);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBorder_Statistic_Blue1 = new MyDesign.PanelBorder_Statistic_Blue();
        panelBorder_Basic1 = new MyDesign.PanelBorder_Basic();
        panelBorder2 = new MyDesign.PanelBorder();
        pnImageBook = new MyDesign.PanelBorder_Basic();
        lbImageBook = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnLuuThongTin = new MyDesign.MyButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtTenSach = new MyDesign.MyTextField_Basic();
        txtGia = new MyDesign.MyTextField_Basic();
        txtSoLuong = new MyDesign.MyTextField_Basic();
        author = new author_BUS();
        List<Author> authorList = author.getAllName();
        cbTacGia = new javax.swing.JComboBox<>();
        lbThemTacGia = new javax.swing.JLabel();
        publisher = new publisher_BUS();
        final List<publisher> publisherList = publisher.getAllName();
        cbNXB = new javax.swing.JComboBox<>();
        lbThemNXB = new javax.swing.JLabel();
        category = new category_BUS();
        List<Category> categoryList = category.getAllName();
        cbTheLoai = new javax.swing.JComboBox<>();
        lbThemTheLoai = new javax.swing.JLabel();
        panelBorder1 = new MyDesign.PanelBorder();
        jLabel9 = new javax.swing.JLabel();
        spTable = new javax.swing.JScrollPane();
        tbSachDuocNhap = new MyDesign.MyTable();
        btnNhapQuaSheet = new MyDesign.MyButton();
        jLabel10 = new javax.swing.JLabel();
        supplyCard = new supplyCard_BUS();
        List<supply_Card> supplyCardList = supplyCard.getAllName();
        cbNhaCungCap = new javax.swing.JComboBox<>();
        lbThemNhaCungCap = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtTongChi = new javax.swing.JLabel();
        btnXacNhan = new MyDesign.MyButton();
        jLabel3 = new javax.swing.JLabel();
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panelBorder2.setPreferredSize(new java.awt.Dimension(217, 327));

        pnImageBook.setPreferredSize(new java.awt.Dimension(137, 192));

        lbImageBook.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbImageBook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/AddImage.png"))); // NOI18N
        lbImageBook.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
        lbImageBook.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setDialogTitle("Chọn tệp ảnh .png, .jpg");            
                FileNameExtensionFilter filter = new FileNameExtensionFilter("Tệp ảnh .png, .jpg", "png", "jpg");
                fileChooser.setFileFilter(filter);
                int result = fileChooser.showOpenDialog(null);
                if (result == JFileChooser.APPROVE_OPTION) {
                    String selectedImagePath = fileChooser.getSelectedFile().getAbsolutePath();
                    if(selectedImagePath==null)
                    {
                    	JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Không tìm thấy ảnh.","Thông Báo",JOptionPane.INFORMATION_MESSAGE);
                    	lbImageBook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/AddImage.png")));
                    }else {
                    	JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Đã chọn ảnh: " + selectedImagePath);
                        lbImageBook.setIcon(new javax.swing.ImageIcon(selectedImagePath));
                    }
                }
            }
        });


        javax.swing.GroupLayout pnImageBookLayout = new javax.swing.GroupLayout(pnImageBook);
        pnImageBook.setLayout(pnImageBookLayout);
        pnImageBookLayout.setHorizontalGroup(
            pnImageBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbImageBook, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
        );
        pnImageBookLayout.setVerticalGroup(
            pnImageBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbImageBook, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
        );

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 13)); // NOI18N
        jLabel2.setText("Số lượng");

        btnLuuThongTin.setForeground(new java.awt.Color(44, 137, 247));
        btnLuuThongTin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/action-save-white.png"))); // NOI18N
        btnLuuThongTin.setText("Lưu thông tin");
        btnLuuThongTin.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLuuThongTin.setPreferredSize(new java.awt.Dimension(177, 36));

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 13)); // NOI18N
        jLabel4.setText("Giá");

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 13)); // NOI18N
        jLabel5.setText("Thể loại");

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 13)); // NOI18N
        jLabel6.setText("NXB");

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 13)); // NOI18N
        jLabel7.setText("Tác giả");

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 13)); // NOI18N
        jLabel8.setText("Tên sách");
        
        txtTenSach.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(229, 229, 229)));
        
        //GÕ ENTER SAU KHI NHẬP TÊN SÁCH
        txtTenSach.addKeyListener(new KeyListener() {
    			
    		@Override
    		public void keyTyped(KeyEvent e) {
    			// TODO Auto-generated method stub
    		}
    			
    		@Override
    		public void keyReleased(KeyEvent e) {
    			// TODO Auto-generated method stub
    				
    		}
    			
    		@Override
    		public void keyPressed(KeyEvent e) {
    			final String name = txtTenSach.getText();
    			// TODO Auto-generated method stub
    			try {
					if(e.getKeyCode()==KeyEvent.VK_ENTER)
					{
						String img = supplyCard.getByImg(name);
						File imageFile = new File(img);
			            if (imageFile.exists() && imageFile.canRead()) {
			                try {
			                    BufferedImage image = ImageIO.read(imageFile);
			                    if (image != null) {
			                    	//TRUYỀN ĐƯỜNG DẪN TUYỆT ĐỐI (ĐỐI VỚI MÁY MÌNH, CÒN MÁY KHÁC NỄU CHẠY ĐƯỢC THÌ KHỎI SỬA DB)
			                        lbImageBook.setIcon(new javax.swing.ImageIcon(image));
			                    } else {
			                        System.out.println("Không thể đọc hình ảnh.");
			                    }
			                } catch (IOException e1) {
			                    System.out.println(e1);
			                    JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Không thể đọc tệp ảnh.", "Lỗi", JOptionPane.ERROR_MESSAGE);
			                }
			            } else {
			                JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Tệp ảnh không tồn tại hoặc không thể đọc.", "Lỗi", JOptionPane.ERROR_MESSAGE);
			            }
			        }
				} catch (Exception e1) {
					// TODO Auto-generated catch block
    				JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Tên sách không đúng hoặc Tên Sách không tồn tại.","Cảnh Báo",JOptionPane.WARNING_MESSAGE);
					System.out.println(e1);
				}
    		}
    	});       
        
        txtGia.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(229, 229, 229)));
        
        //GÕ ENTER KIỂM TRA NỘI DUNG CỦA TEXTFIELD GIÁ
        txtGia.addKeyListener(new KeyListener() {
			
			@Override
			public void keyTyped(KeyEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void keyReleased(KeyEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void keyPressed(KeyEvent e) {
				// TODO Auto-generated method stub
				final String g = txtGia.getText();
				if(e.getKeyCode()==KeyEvent.VK_ENTER)
				{
					if(isAlpha(g))
					{
						JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Nội dung là số không phải là chữ!","Cảnh Báo",JOptionPane.WARNING_MESSAGE);
					}
					if(isNumeric(g))
					{
						if(Integer.parseInt(g)<19000)
						{
							JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Giá không được thấp hơn 19k.","Cảnh Báo",JOptionPane.WARNING_MESSAGE);
						}
					}
					else {
						JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Nội dung không thể chứa cả chữ và số. ","Cảnh Báo",JOptionPane.WARNING_MESSAGE);
					}
				}
			}
		});
        
        txtSoLuong.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(229, 229, 229)));
        
        //CLICK TEXT SỐ LƯỢNG VÀ KIỂM TRA NỘI DUNG TEXT GIÁ TRƯỚC ĐÓ
        txtSoLuong.addMouseListener(new MouseAdapter() {
        	public void mouseClicked(MouseEvent e) {
        		final String g = txtGia.getText();
        		if(e.getClickCount()==1 || e.getClickCount()==2)
        		{
        			if(isAlpha(g))
					{
						JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Nội dung là số không phải là chữ!","Cảnh Báo",JOptionPane.WARNING_MESSAGE);
					}
					if(isNumeric(g))
					{
						if(Integer.parseInt(g)<19000)
						{
							JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Giá không được thấp hơn 19k.","Cảnh Báo",JOptionPane.WARNING_MESSAGE);
						}
					}
					else {
						JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Nội dung không thể chứa cả chữ và số. ","Cảnh Báo",JOptionPane.WARNING_MESSAGE);
					}
        		}
        	}
		});
        
        
        //GÕ ENTER KIỂM TRA TEXT SỐ LƯỢNG
        txtSoLuong.addKeyListener(new KeyListener() {
			
			@Override
			public void keyTyped(KeyEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void keyReleased(KeyEvent e) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void keyPressed(KeyEvent e) {
				// TODO Auto-generated method stub
        		final String sl = txtSoLuong.getText();
        		if(e.getKeyCode()==KeyEvent.VK_ENTER)
        		{
        			if(isAlpha(sl))
					{
						JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Nội dung là số không phải là chữ.","Cảnh Báo",JOptionPane.WARNING_MESSAGE);
					}
					if(isNumeric(sl))
					{
						if(Integer.parseInt(sl)<=0)
						{
							JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Số lượng không được nhỏ hơn bằng 0.","Cảnh Báo",JOptionPane.WARNING_MESSAGE);
						}
					}
					else {
						JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Nội dung không thể chứa cả chữ và số. ","Cảnh Báo",JOptionPane.WARNING_MESSAGE);
					}
        		}
			}
		});
        
        cbTacGia.setBackground(new java.awt.Color(246, 250, 255));
        cbTacGia.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
//        cbTacGia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tác giả" }));
        for(Author item : authorList)
        {
        	cbTacGia.addItem(item.getName());
        }
        cbTacGia.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(229, 229, 229)));
        cbTacGia.setOpaque(true);
        cbTacGia.setPreferredSize(new java.awt.Dimension(77, 28));

        lbThemTacGia.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbThemTacGia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add.png"))); // NOI18N
        lbThemTacGia.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
        lbThemTacGia.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
        lbThemTacGia.addMouseListener(new MouseAdapter() {
        	public void mouseClicked(MouseEvent e)
        	{
        		if(e.getClickCount()==1 || e.getClickCount()==2)
        		{
        			setVisible(false);
        			WareHouseAddReader_Dialog r = new WareHouseAddReader_Dialog(null, rootPaneCheckingEnabled);
        			r.setVisible(true);
        		}
        	}
		});

        cbNXB.setBackground(new java.awt.Color(246, 250, 255));
        cbNXB.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
//        cbNXB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NXB" }));
        for(publisher item : publisherList)
        {
        	cbNXB.addItem(item.getName());
        }
        cbNXB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(229, 229, 229)));
        cbNXB.setOpaque(true);
        cbNXB.setPreferredSize(new java.awt.Dimension(77, 28));

        lbThemNXB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbThemNXB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add.png"))); // NOI18N
        lbThemNXB.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
        lbThemNXB.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
        lbThemNXB.addMouseListener(new MouseAdapter() {
        	public void mouseClicked(MouseEvent e)
        	{
        		if(e.getClickCount()==1 || e.getClickCount()==2)
        		{
        			setVisible(false);
        			WareHouseAddNXB_Dialog r = new WareHouseAddNXB_Dialog(null, rootPaneCheckingEnabled);
        			r.setVisible(true);
        		}
        	}
		});
        
        cbTheLoai.setBackground(new java.awt.Color(246, 250, 255));
        cbTheLoai.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
//        cbTheLoai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Thể loại" }));
        for(Category item : categoryList)
        {
        	cbTheLoai.addItem(item.getName());
        }
        cbTheLoai.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(229, 229, 229)));
        cbTheLoai.setOpaque(true);
        cbTheLoai.setPreferredSize(new java.awt.Dimension(77, 28));

        lbThemTheLoai.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbThemTheLoai.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add.png"))); // NOI18N
        lbThemTheLoai.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
        lbThemTheLoai.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
        lbThemTheLoai.addMouseListener(new MouseAdapter() {
        	public void mouseClicked(MouseEvent e)
        	{
        		if(e.getClickCount()==1 || e.getClickCount()==2)
        		{
        			setVisible(false);
        			WareHouseAddTypeBook_Dialog r = new WareHouseAddTypeBook_Dialog(null, rootPaneCheckingEnabled);
        			r.setVisible(true);
        		}
        	}
		});
        
        javax.swing.GroupLayout panelBorder2Layout = new javax.swing.GroupLayout(panelBorder2);
        panelBorder2.setLayout(panelBorder2Layout);
        panelBorder2Layout.setHorizontalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(16, 16, 16)
                        .addComponent(txtSoLuong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnLuuThongTin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(26, 26, 26)
                        .addComponent(cbTheLoai, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbThemTheLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(54, 54, 54)
                        .addComponent(txtGia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelBorder2Layout.createSequentialGroup()
                                .addComponent(cbTacGia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbThemTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtTenSach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(46, 46, 46)
                        .addComponent(cbNXB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbThemNXB, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(panelBorder2Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(pnImageBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 40, Short.MAX_VALUE))
        );
        panelBorder2Layout.setVerticalGroup(
            panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelBorder2Layout.createSequentialGroup()
                                .addComponent(pnImageBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(txtTenSach, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7))
                            .addGroup(panelBorder2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbThemTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6))
                    .addGroup(panelBorder2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbThemNXB, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbNXB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lbThemTheLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbTheLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtGia, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelBorder2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnLuuThongTin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(127, 127, 127));
        jLabel9.setText("Sách được nhập");

        spTable.setBorder(null);
//        final DefaultTableModel model = (DefaultTableModel) tbSachDuocNhap.getModel();
        tbSachDuocNhap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Tên sách", "Tác giả", "NXB", "Thể loại", "Giá", "Số lượng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        spTable.setViewportView(tbSachDuocNhap);
        
        //ACTION LƯU THÔNG TIN VÀ KIỂM TRA TEXT SỐ LƯỢNG
        
        btnLuuThongTin.addActionListener(new ActionListener() {
			
			@Override
			
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				final String sl = txtSoLuong.getText();
				if(isAlpha(sl))
				{
					JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Nội dung là số không phải là chữ.","Cảnh Báo",JOptionPane.WARNING_MESSAGE);
				}
				if(isNumeric(sl))
				{
					if(Integer.parseInt(sl)<=0)
					{
						JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Số lượng không được nhỏ hơn bằng 0.","Cảnh Báo",JOptionPane.WARNING_MESSAGE);
					}
					else {
						DefaultTableModel model = (DefaultTableModel) tbSachDuocNhap.getModel();
						tensach=txtTenSach.getText();
						gia = txtGia.getText();
						soluong = txtSoLuong.getText();
						tgia = String.valueOf(cbTacGia.getSelectedItem());
						nxb = String.valueOf(cbNXB.getSelectedItem());
						theloai = String.valueOf(cbTheLoai.getSelectedItem());
						ncc = String.valueOf(cbNhaCungCap.getSelectedItem());
						String[] rowData = {Integer.toString(model.getRowCount() + 1), tensach, tgia, nxb, theloai, gia, soluong};
						model.addRow(rowData);
						tongchi = tongchi + (Integer.parseInt(gia) * Integer.parseInt(soluong));
						tongsoluong = tongsoluong + (Integer.parseInt(soluong));
						txtTongChi.setText(String.valueOf(tongchi+"đ"));
						lbImageBook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/AddImage.png")));
						txtTenSach.setText("");
						txtGia.setText("");
						txtSoLuong.setText("");
					}
				}
				else {
					JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Nội dung không thể chứa cả chữ và số. ","Cảnh Báo",JOptionPane.WARNING_MESSAGE);
				}
			}
		});
        
        //ACTION XỬ LÝ XÓA TRONG JTABLE
        final JPopupMenu popupMenu = new JPopupMenu();
        JMenuItem menuItemXoa = new JMenuItem("Xóa");
        JMenuItem menuItemNhap = new JMenuItem("Nhập thêm sách");
        menuItemXoa.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				int dialogResult = JOptionPane.showConfirmDialog(JOptionPane.getRootFrame(), "Bạn có chắc là muốn xóa không?","Xác nhận",JOptionPane.YES_NO_OPTION);
				if(dialogResult == JOptionPane.YES_OPTION)
				{
					DefaultTableModel model = (DefaultTableModel) tbSachDuocNhap.getModel();
					int selectedRow = tbSachDuocNhap.getSelectedRow();
					if(selectedRow >= 0)
					{
						Object value = tbSachDuocNhap.getValueAt(selectedRow, 5);
						Object value1 = tbSachDuocNhap.getValueAt(selectedRow, 6);
						if(value !=null && value1 !=null)
						{
							gia = value.toString();
							soluong = value1.toString();
							tongchi = tongchi - (Integer.parseInt(gia)*Integer.parseInt(soluong));
							txtTongChi.setText(String.valueOf(tongchi));
							tongsoluong = tongsoluong - (Integer.parseInt(soluong));
						}
						model.removeRow(selectedRow);
						 // Cập nhật lại giá trị "STT" cho tất cả các dòng còn lại
				        for (int i = 0; i < model.getRowCount(); i++) {
				            model.setValueAt(i + 1, i, 0); // Cập nhật cột "STT" (cột 0)
				        }
					}
				}
			}
		});
        
        menuItemNhap.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				txtTenSach.setEditable(true);
				txtGia.setEditable(true);
				txtSoLuong.setEditable(true);
				cbNXB.setEnabled(true);
				cbTacGia.setEnabled(true);
				cbTheLoai.setEnabled(true);
				cbNhaCungCap.setEnabled(true);
			}
		});
        
        popupMenu.add(menuItemXoa);
        popupMenu.add(menuItemNhap);
        tbSachDuocNhap.setComponentPopupMenu(popupMenu);
        
        tbSachDuocNhap.addMouseListener(new MouseAdapter() {
        	 public void mousePressed(MouseEvent e) {
                 if (SwingUtilities.isRightMouseButton(e)) {
                     int row = tbSachDuocNhap.rowAtPoint(e.getPoint());
                     tbSachDuocNhap.setRowSelectionInterval(row, row);
                 }
             }
		});
        
        tbSachDuocNhap.addMouseListener(new MouseAdapter() {
        	public void mouseClicked(MouseEvent e)
        	{
        		if(e.getClickCount() == 1 || e.getClickCount() == 2)
        		{
        			DefaultTableModel model = (DefaultTableModel) tbSachDuocNhap.getModel();
        			int seclectedRow = tbSachDuocNhap.getSelectedRow();
        			if(seclectedRow >= 0)
        			{
        				Object sach = tbSachDuocNhap.getValueAt(seclectedRow, 1).toString();
        				Object tg = tbSachDuocNhap.getValueAt(seclectedRow, 2);
        				Object nhaxuatban = tbSachDuocNhap.getValueAt(seclectedRow, 3);
        				Object tl = tbSachDuocNhap.getValueAt(seclectedRow, 4);
        				Object g = tbSachDuocNhap.getValueAt(seclectedRow, 5).toString();
        				Object sl = tbSachDuocNhap.getValueAt(seclectedRow, 6).toString();
        				if(sach!=null && tg!=null && nhaxuatban!=null && tl!=null && g!=null && sl!=null)
        				{
    			            txtGia.setText(String.valueOf(g));
    			            txtGia.setEditable(false);
    			            txtSoLuong.setText(String.valueOf(sl));
    			            txtSoLuong.setEditable(false);
        					txtTenSach.setText(String.valueOf(sach));
        					txtTenSach.setEditable(false);
        					
        					cbTacGia.setSelectedItem(tg);
        					cbTacGia.setEnabled(false);
        					cbTheLoai.setSelectedItem(tl);
        					cbTheLoai.setEnabled(false);
        					cbNXB.setSelectedItem(nhaxuatban);
            				cbNXB.setEnabled(false);
            				cbNhaCungCap.setSelectedItem(ncc);
        					cbNhaCungCap.setEnabled(false);
        					
        					String img = supplyCard.getByImg(String.valueOf(sach));
    						File imageFile = new File(img);
    			            if (imageFile.exists() && imageFile.canRead()) {
    			                try {
    			                    BufferedImage image = ImageIO.read(imageFile);
    			                    if (image != null) {
    			                    	//TRUYỀN ĐƯỜNG DẪN TUYỆT ĐỐI (ĐỐI VỚI MÁY MÌNH, CÒN MÁY KHÁC NỄU CHẠY ĐƯỢC THÌ KHỎI SỬA DB)
    			                        lbImageBook.setIcon(new javax.swing.ImageIcon(image));
    			                    }
    			                } catch (IOException e1) {
    			                    JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Không thể đọc tệp ảnh.", "Lỗi", JOptionPane.ERROR_MESSAGE);
    			                }
    			            } else {
    			                JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Tệp ảnh không tồn tại hoặc không thể đọc.", "Lỗi", JOptionPane.ERROR_MESSAGE);
    			            }
        				}
        			}
        		}
        	}
		});
        
        btnNhapQuaSheet.setForeground(new java.awt.Color(22, 113, 221));
        btnNhapQuaSheet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/action-import.png"))); // NOI18N
        btnNhapQuaSheet.setText("Nhập qua sheet");
        btnNhapQuaSheet.setToolTipText("");
        btnNhapQuaSheet.setColorClick(new java.awt.Color(153, 204, 255));
        btnNhapQuaSheet.setColorOver(new java.awt.Color(102, 204, 255));
        btnNhapQuaSheet.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        
        btnNhapQuaSheet.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				try {
	                SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
	                Random random = new Random();
	                String randomFileName = "C:\\Users\\Hi\\Documents\\Excel\\SupplyCard_" + dateFormat.format(new Date()) + "_" + random.nextInt(1000) + ".xlsx";

	                File excelFile = new File(randomFileName);
	                XSSFWorkbook workbook = new XSSFWorkbook();
	                XSSFSheet sheet = workbook.createSheet("SupplyCard");
	                XSSFRow titleRow = sheet.createRow(0);
	                for(int j = 0; j < tbSachDuocNhap.getColumnCount(); j++)
	                {
	                	XSSFCell cell = titleRow.createCell(j);
	                	cell.setCellValue(tbSachDuocNhap.getColumnName(j));
	                }
	                for (int i = 0; i < tbSachDuocNhap.getRowCount(); i++) {
	                    XSSFRow row = sheet.createRow(i+1);
	                    for (int j = 0; j < tbSachDuocNhap.getColumnCount(); j++) {
	                        XSSFCell cell = row.createCell(j);
	                        cell.setCellValue(tbSachDuocNhap.getValueAt(i, j).toString());
	                    }
	                }
	                FileOutputStream outFile = new FileOutputStream(excelFile);
	                workbook.write(outFile);
	                outFile.close();
	                workbook.close();
	                JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Dữ liệu đã được ghi vào tệp Excel: " + randomFileName);
	            } catch (Exception ex) {
	                ex.printStackTrace();
	                JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Lỗi khi ghi dữ liệu vào tệp Excel: " + ex.getMessage());
	            }
			}
		});
        
        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1.setLayout(panelBorder1Layout);
        panelBorder1Layout.setHorizontalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spTable, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                    .addGroup(panelBorder1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNhapQuaSheet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelBorder1Layout.setVerticalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnNhapQuaSheet, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spTable, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("Nhà cung cấp");

        cbNhaCungCap.setBackground(new java.awt.Color(246, 250, 255));
        cbNhaCungCap.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
//        cbNhaCungCap.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nhà cung cấp" }));
        for(supply_Card item : supplyCardList)
        {
        	cbNhaCungCap.addItem(item.getProvider());
        }
        cbNhaCungCap.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(229, 229, 229)));
        cbNhaCungCap.setOpaque(true);
        cbNhaCungCap.setPreferredSize(new java.awt.Dimension(77, 28));

        lbThemNhaCungCap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbThemNhaCungCap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add.png"))); // NOI18N
        lbThemNhaCungCap.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
        lbThemNhaCungCap.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
        lbThemNhaCungCap.addMouseListener(new MouseAdapter() {
        	public void mouseClicked(MouseEvent e)
        	{
        		if(e.getClickCount()==1 || e.getClickCount()==2)
        		{
        			setVisible(false);
        			WareHouseAddNCC_Dialog r = new WareHouseAddNCC_Dialog(null, rootPaneCheckingEnabled);
        			r.setVisible(true);
        		}
        	}
		});
        
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText("Tổng chi");

        txtTongChi.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        txtTongChi.setText("0đ");

        btnXacNhan.setBackground(new java.awt.Color(22, 113, 221));
        btnXacNhan.setForeground(new java.awt.Color(255, 255, 255));
        btnXacNhan.setText("Xác nhận");
        btnXacNhan.setBorderColor(new java.awt.Color(22, 113, 221));
        btnXacNhan.setColor(new java.awt.Color(22, 113, 221));
        btnXacNhan.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        
        btnXacNhan.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				int rs = JOptionPane.showConfirmDialog(JOptionPane.getRootFrame(), "Bạn có muốn nhập qua sheet không?","Xác nhận",JOptionPane.YES_NO_OPTION);
				if(rs == JOptionPane.YES_OPTION)
				{
					try {
		                SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
		                Random random = new Random();
		                String randomFileName = "C:\\Users\\Hi\\Documents\\Excel\\SupplyCard_" + dateFormat.format(new Date()) + "_" + random.nextInt(1000) + ".xlsx";

		                File excelFile = new File(randomFileName);
		                XSSFWorkbook workbook = new XSSFWorkbook();
		                XSSFSheet sheet = workbook.createSheet("SupplyCard");
		                XSSFRow titleRow = sheet.createRow(0);
		                for(int j = 0; j < tbSachDuocNhap.getColumnCount(); j++)
		                {
		                	XSSFCell cell = titleRow.createCell(j);
		                	cell.setCellValue(tbSachDuocNhap.getColumnName(j));
		                }
		                for (int i = 0; i < tbSachDuocNhap.getRowCount(); i++) {
		                    XSSFRow row = sheet.createRow(i+1);
		                    for (int j = 0; j < tbSachDuocNhap.getColumnCount(); j++) {
		                        XSSFCell cell = row.createCell(j);
		                        cell.setCellValue(tbSachDuocNhap.getValueAt(i, j).toString());
		                    }
		                }
		                FileOutputStream outFile = new FileOutputStream(excelFile);
		                workbook.write(outFile);
		                outFile.close();
		                workbook.close();
		                JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Dữ liệu đã được ghi vào tệp Excel: " + randomFileName);
		            } catch (Exception ex) {
		                ex.printStackTrace();
		                JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Lỗi khi ghi dữ liệu vào tệp Excel: " + ex.getMessage());
		            }
				}
//				else {
//					// LƯU CÁC THÔNG TIN TỪ JTABLE XUỐNG DATABASE
//					try {
//						SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
//						Date supDate = new Date(); 
//						String formattedDate = dateFormat.format(supDate);
//				        supplyCard.saveSC(supDate, nxb);
//				        detailSC.saveDSC(tongsoluong);
//				        int bookid = supplyCard.getByNameBook(tensach);
//				        int pubid = supplyCard.getByPublisherID(nxb);
//				        cpBook.savecpB(bookid, Integer.parseInt(soluong), pubid, Long.parseLong(gia));
//				        JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), "Tạo Đơn Thành Công","Thông Báo",JOptionPane.INFORMATION_MESSAGE);
//					} catch (NumberFormatException e1) {
//						// TODO Auto-generated catch block
//						System.out.println(e1);
//					}
//				}
			}
		});
        
        javax.swing.GroupLayout panelBorder_Basic1Layout = new javax.swing.GroupLayout(panelBorder_Basic1);
        panelBorder_Basic1.setLayout(panelBorder_Basic1Layout);
        panelBorder_Basic1Layout.setHorizontalGroup(
            panelBorder_Basic1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder_Basic1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelBorder2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelBorder_Basic1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelBorder_Basic1Layout.createSequentialGroup()
                        .addGroup(panelBorder_Basic1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addGroup(panelBorder_Basic1Layout.createSequentialGroup()
                                .addComponent(cbNhaCungCap, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbThemNhaCungCap, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(panelBorder_Basic1Layout.createSequentialGroup()
                        .addGroup(panelBorder_Basic1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(txtTongChi))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))))
        );
        panelBorder_Basic1Layout.setVerticalGroup(
            panelBorder_Basic1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder_Basic1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelBorder_Basic1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelBorder2, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelBorder_Basic1Layout.createSequentialGroup()
                        .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelBorder_Basic1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelBorder_Basic1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelBorder_Basic1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbThemNhaCungCap, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbNhaCungCap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTongChi, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/warehouse-white.png"))); // NOI18N
        jLabel3.setText("Đơn nhập");

        javax.swing.GroupLayout panelBorder_Statistic_Blue1Layout = new javax.swing.GroupLayout(panelBorder_Statistic_Blue1);
        panelBorder_Statistic_Blue1.setLayout(panelBorder_Statistic_Blue1Layout);
        panelBorder_Statistic_Blue1Layout.setHorizontalGroup(
            panelBorder_Statistic_Blue1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder_Statistic_Blue1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBorder_Statistic_Blue1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)
                    .addComponent(panelBorder_Basic1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelBorder_Statistic_Blue1Layout.setVerticalGroup(
            panelBorder_Statistic_Blue1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder_Statistic_Blue1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelBorder_Basic1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBorder_Statistic_Blue1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelBorder_Statistic_Blue1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    //Actions
    public static boolean isNumeric(String str) {
        return str.matches("-?\\d+(\\.\\d+)?");
    }
    public static boolean isAlpha(String str) {
        return str.matches("[a-zA-Z]+");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WareHouseImport_Dialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WareHouseImport_Dialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WareHouseImport_Dialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WareHouseImport_Dialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        //</editor-fold>
        
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                WareHouseImport_Dialog dialog = new WareHouseImport_Dialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private MyDesign.MyButton btnLuuThongTin;
    private MyDesign.MyButton btnNhapQuaSheet;
    private MyDesign.MyButton btnXacNhan;
    private javax.swing.JComboBox<String> cbNXB;
    private javax.swing.JComboBox<String> cbNhaCungCap;
    private javax.swing.JComboBox<String> cbTacGia;
    private javax.swing.JComboBox<String> cbTheLoai;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private static javax.swing.JLabel lbImageBook;
    private javax.swing.JLabel lbThemNXB;
    private javax.swing.JLabel lbThemNhaCungCap;
    private javax.swing.JLabel lbThemTacGia;
    private javax.swing.JLabel lbThemTheLoai;
    private MyDesign.PanelBorder panelBorder1;
    private MyDesign.PanelBorder panelBorder2;
    private MyDesign.PanelBorder_Basic panelBorder_Basic1;
    private MyDesign.PanelBorder_Statistic_Blue panelBorder_Statistic_Blue1;
    private MyDesign.PanelBorder_Basic pnImageBook;
    private javax.swing.JScrollPane spTable;
    private MyDesign.MyTable tbSachDuocNhap;
    private MyDesign.MyTextField_Basic txtGia;
    private MyDesign.MyTextField_Basic txtSoLuong;
    private static MyDesign.MyTextField_Basic txtTenSach;
    private javax.swing.JLabel txtTongChi;
    private author_BUS author;
    private publisher_BUS publisher;
    private category_BUS category;
    private static supplyCard_BUS supplyCard;
    private static detailSC_BUS detailSC;
    private static cpBook_BUS cpBook;
    private int tongchi = 0;
    private int tongsoluong =0;
    private String gia, soluong;
    private String[] rowdata;
    private String tensach;
    private String tgia, nxb, ncc, theloai;
    private Date supDate;
    // End of variables declaration//GEN-END:variables
    
}
